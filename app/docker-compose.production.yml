# Production Docker Compose for Learning Research Platform
services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: learning-platform-app
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - QDRANT_URL=${QDRANT_URL}
      - SEARXNG_URL=${SEARXNG_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - WASP_WEB_CLIENT_URL=${WASP_WEB_CLIENT_URL}
      - WASP_SERVER_URL=${WASP_SERVER_URL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PORT=${SMTP_PORT}
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      - postgres
      - redis
      - qdrant
      - searxng
    networks:
      - learning-platform
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: learning-platform-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: learning_platform
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "15432:5432"
    networks:
      - learning-platform
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: learning-platform-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "16379:6379"
    networks:
      - learning-platform
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SearXNG Meta Search Engine
  searxng:
    image: searxng/searxng:2025.8.8-5e7109c
    container_name: learning-platform-searxng
    restart: unless-stopped
    ports:
      - "18080:8080"
    volumes:
      - searxng_cache:/var/cache/searxng
    environment:
      - SEARXNG_BASE_URL=${SEARXNG_BASE_URL:-http://localhost:18080/}
      - SEARXNG_URL=${SEARXNG_URL:-http://localhost:18080/}
    networks:
      - learning-platform
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.15.1
    container_name: learning-platform-qdrant
    restart: unless-stopped
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "16333:6333"
      - "16334:6334"
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - learning-platform
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: learning-platform-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
      - ./.wasp/build/web-app/build:/var/www/html
    depends_on:
      - app
    networks:
      - learning-platform
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  searxng_cache:
    driver: local

networks:
  learning-platform:
    driver: bridge